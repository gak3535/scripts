#!/bin/bash
#
# Author:               Jet Wilda <jet.wilda@gmail.com>
# Modifed by:           Jet Wilda <jet.wilda@gmail.com>
# Last Modified:        10/02/2012
#
# Description:
# 	script to create a postfix mail server instance by copying /etc/postfix and making changes
#

DATE=`date +%Y%m%d`
CDIR=`pwd`
ETC=/etc
SPOOLDIR="/var/spool"
BASENAME="postfix"
BASEDIR="$ETC/$BASENAME"
NEW_NAME=""
IP=""
HOSTNAME=""
NAMELIMIT=30
DEBUG="FALSE"
SCRIPT=$0

# source in the helper functions
. /usr/local/bin/functions

# make sure script was started by root or exit
enforceRoot

#usage directions
usage () {
 echo ""
 echo "Usage: $SCRIPT [options] -i IP -f HOST_NAME -n instance_name"
 echo "         -n ${BASENAME}_instance_name       # only allowed 20 characters and the last 7 must be postfix"
 echo "         -i IP_ADDRESS                  # IP address to have this instance bind to"
 echo "         -f HOST_NAME                   # FQDN/hostname the mail server says it is i.e. mail.NAME.com"
 echo "         -d verbose (debug)             # default is off"
 echo "         -h display this help message"
 echo ""
 echo " i.e. $SCRIPT -d -i 192.168.200.233 -f mail.DOMAIN.com -n NAME${BASENAME}"
 echo ""
}

# determine the number of arguments passed in
if [[ $# < 6 ]]; then
 echo -e "\033[1;31m WRONG NUMBER OF ARGUMENTS! \033[0m"
 usage
 exit 2
fi

while getopts "n:i:f:d" options; do
  case $options in
    n ) NEW_NAME=$OPTARG;;
    i ) IP=$OPTARG;;
    f ) HOSTNAME=$OPTARG;;
    d ) DEBUG="TRUE";;
    h ) usage;;
    \? ) usage
         exit 3;;
    * ) usage
          exit 3;;
  esac
done

# HOSTNAME
if [[ "$HOSTNAME" == "" ]] 
then
  echo -e "\033[1;31m YOU MUST SPECIFY THE HOSTNAME this INSTANCE will identify itself as! \033[0m"
  usage
  exit 4
fi
debug "the HOSTNAME is set to ,$HOSTNAME,"

# IP
if [[ "$IP" == "" ]] 
then
  echo -e "\033[1;31m YOU MUST SPECIFY THE IP this INSTANCE will use! \033[0m"
  usage
  exit 5
fi
debug "the IP is set to ,$IP,"

# name cannot be blank it is a required argument
if [[ "$NEW_NAME" == "" ]] 
then
  echo -e "\033[1;31m YOU MUST SPECIFY THE $BASENAME INSTANCE NAME! \033[0m"
  usage
  exit 6
fi

# enforce the name restrictions
enforceNameLength $NEW_NAME $BASENAME $NAMELIMIT
RETVAL=$?
if [[ $RETVAL > 0 ]]; then
 usage
 exit 7
fi

debug "$BASENAME instance name is set to ,$NEW_NAME,"

# Check and make sure the name isn't already used
cd $ETC
USED=`ls -d *${BASENAME}*`
debug "list of currently used $BASENAME instance names ,$USED,"
for NAME in $USED
do
 debug "NAME is ,$NAME, and NEW_NAME is ,$NEW_NAME,"
 if [ "$NEW_NAME" == "$NAME" ]
 then
  echo -e "\033[1;31mPICK A NEW NAME that name ($NEW_NAME) is already used!\033[0m"
  echo "exiting"
  exit 8
 fi
done

debug "checking for template directory"
# Make sure the template directory 
if [[ ! -d "${ETC}/${BASENAME}"  ]]
then
  echo -e "\033[1;31m THIS MACHINE IS NOT SETUP TO RUN POSTFIX \033[0m"
  echo -e "\033[1;31m \t${ETC}/${BASENAME} does not exist! \033[0m"
  exit 1
fi

NEWDIR="$ETC/$NEW_NAME"

# create the new directory for the configuration files
mkdir $NEWDIR

# OK, now build out the configuration directory
cp -a $BASEDIR/* $NEWDIR/

# Back up the original main.cf 
cp -p $NEWDIR/main.cf $NEWDIR/main.cf.$DATE

# zero out the file and 
echo -n > $NEWDIR/main.cf

echo "queue_directory = /var/spool/$NEW_NAME" >> $NEWDIR/main.cf
echo "command_directory = /usr/sbin" >> $NEWDIR/main.cf
echo "daemon_directory = /usr/libexec/postfix" >> $NEWDIR/main.cf
echo "mail_owner = postfix" >> $NEWDIR/main.cf
echo "myhostname = $HOSTNAME" >> $NEWDIR/main.cf
echo "inet_interfaces = $IP" >> $NEWDIR/main.cf
echo "mydestination = localhost" >> $NEWDIR/main.cf
echo "unknown_local_recipient_reject_code = 550" >> $NEWDIR/main.cf
echo "alias_maps = hash:/etc/aliases" >> $NEWDIR/main.cf
echo "alias_database = hash:/etc/aliases" >> $NEWDIR/main.cf
echo "debug_peer_level = 2" >> $NEWDIR/main.cf
echo "debugger_command =" >> $NEWDIR/main.cf
echo "	 PATH=/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin" >> $NEWDIR/main.cf
echo "	 xxgdb \$daemon_directory/\$process_name \$process_id & sleep 5" >> $NEWDIR/main.cf
echo "sendmail_path = /usr/sbin/sendmail.postfix" >> $NEWDIR/main.cf
echo "newaliases_path = /usr/bin/newaliases.postfix" >> $NEWDIR/main.cf
echo "mailq_path = /usr/bin/mailq.postfix" >> $NEWDIR/main.cf
echo "setgid_group = postdrop" >> $NEWDIR/main.cf
echo "html_directory = no" >> $NEWDIR/main.cf
echo "manpage_directory = /usr/share/man" >> $NEWDIR/main.cf
echo "sample_directory = /usr/share/doc/postfix-2.3.3/samples" >> $NEWDIR/main.cf
echo "readme_directory = /usr/share/doc/postfix-2.3.3/README_FILES" >> $NEWDIR/main.cf
echo "biff = " >> $NEWDIR/main.cf
echo "mynetworks = " >> $NEWDIR/main.cf
echo "virtual_mailbox_domains = mysql:/etc/$NEW_NAME/mysql-virtual-mailbox-domains.cf" >> $NEWDIR/main.cf
echo "virtual_uid_maps = static:5000" >> $NEWDIR/main.cf
echo "virtual_gid_maps = static:5000" >> $NEWDIR/main.cf
echo "virtual_mailbox_maps = mysql:/etc/$NEW_NAME/mysql-virtual-mailbox-maps.cf" >> $NEWDIR/main.cf
echo "virtual_alias_maps=mysql:/etc/$NEW_NAME/mysql-virtual-alias-maps.cf,mysql:/etc/$NEW_NAME/mysql-email2email.cf" >> $NEWDIR/main.cf
echo "virtual_transport = dovecot" >> $NEWDIR/main.cf
echo "dovecot_destination_recipient_limit = 1" >> $NEWDIR/main.cf
echo "" >> $NEWDIR/main.cf
echo "smtpd_sasl_auth_enable = yes" >> $NEWDIR/main.cf
echo "smtpd_sasl2_auth_enable = yes" >> $NEWDIR/main.cf
echo "broken_sasl_auth_clients = yes" >> $NEWDIR/main.cf
echo "smtpd_sasl_authenticated_header = yes" >> $NEWDIR/main.cf
echo "smtpd_helo_restrictions         = permit_mynetworks, warn_if_reject, reject_non_fqdn_hostname" >> $NEWDIR/main.cf
echo "smtpd_sender_restrictions       = reject_unauth_pipelining, reject_unknown_sender_domain, reject_non_fqdn_sender" >> $NEWDIR/main.cf
echo "smtpd_recipient_restrictions    = permit_auth_destination, permit_sasl_authenticated, permit_mynetworks, permit_mx_backup, reject_unauth_destination, reject_unlisted_recipient, reject_non_fqdn_recipient, reject_unknown_reverse_client_hostname" >> $NEWDIR/main.cf
echo "smtpd_sasl_security_options = noanonymous" >> $NEWDIR/main.cf
echo "smtpd_sasl_type = dovecot" >> $NEWDIR/main.cf
echo "smtpd_sasl_path = private/auth" >> $NEWDIR/main.cf
echo "" >> $NEWDIR/main.cf
echo "smtpd_helo_required     = yes" >> $NEWDIR/main.cf
echo "disable_vrfy_command    = yes" >> $NEWDIR/main.cf
echo "smtpd_data_restrictions = reject_unauth_pipelining" >> $NEWDIR/main.cf
echo "smtpd_etrn_restrictions = reject" >> $NEWDIR/main.cf
echo "" >> $NEWDIR/main.cf
echo "show_user_unknown_table_name = no" >> $NEWDIR/main.cf
echo "mailbox_size_limit = 1073741824" >> $NEWDIR/main.cf
echo "# Restric message size to 50MB" >> $NEWDIR/main.cf
echo "message_size_limit = 52428800" >> $NEWDIR/main.cf
echo "" >> $NEWDIR/main.cf

# Create a new spool directory
mkdir $SPOOLDIR/$NEW_NAME
/usr/sbin/postfix -c $NEWDIR check

# fix up the spool directory so that authentication works
#rm -rf $SPOOLDIR/$NEW_NAME/private
#ln -s $SPOOLDIR/$BASENAME/private $SPOOLDIR/$NEW_NAME/private
#chown -h postfix:root $SPOOLDIR/$NEW_NAME/private

#get the current ALTERNATECONFIGS setting
ALTERNATECONFIGS=`grep alternate_config_directories $BASEDIR/main.cf | tr -d [:space:]`
debug "ALTERNATECONFIGS is ,$ALTERNATECONFIGS,"
if [[ $ALTERNATECONFIGS == "" || $ALTERNATECONFIGS == "alternate_config_directories=" ]]
then
ALTERNATECONFIGS="alternate_config_directories=$NEWDIR"
else
ALTERNATECONFIGS="$ALTERNATECONFIGS,$NEWDIR"
fi

debug "ALTERNATECONFIGS is now set to ,$ALTERNATECONFIGS,"

# added the alternate configs to the defaul postfix instance
/usr/sbin/postconf -e $ALTERNATECONFIGS

# Create the options file used by the start script
echo "# Configuration file for the postfix service $NEW_NAME." >> $ETC/sysconfig/$NEW_NAME
echo "" >> $ETC/sysconfig/$NEW_NAME
echo "#" >> $ETC/sysconfig/$NEW_NAME
echo "# To pass additional options (for instance, -c configuration directory) to the" >> $ETC/sysconfig/$NEW_NAME
echo "# postfix binary at startup, set OPTIONS here." >> $ETC/sysconfig/$NEW_NAME
echo "#" >> $ETC/sysconfig/$NEW_NAME
echo "" >> $ETC/sysconfig/$NEW_NAME
echo "SPOOL_DIR=/var/spool/$NEW_NAME" >> $ETC/sysconfig/$NEW_NAME
echo "MAIL_CONFIG=/etc/$NEW_NAME" >> $ETC/sysconfig/$NEW_NAME
echo "OPTIONS=\"-c \$MAIL_CONFIG\"" >> $ETC/sysconfig/$NEW_NAME
echo "OPTIONS2=\"-C \$MAIL_CONFIG\"" >> $ETC/sysconfig/$NEW_NAME
echo "" >> $ETC/sysconfig/$NEW_NAME
echo "export MAIL_CONFIG" >> $ETC/sysconfig/$NEW_NAME

#copy the start script and then change it
cp -p $ETC/init.d/postfix $ETC/init.d/$NEW_NAME
sed -e "s/\/etc\/sysconfig\/postfix/\/etc\/sysconfig\/$NEW_NAME/g" -e "s/prog=postfix/prog=$NEW_NAME/g" --in-place $ETC/init.d/$NEW_NAME

#added it to the services and set it to start on boot 
chkconfig --add $NEW_NAME
chkconfig $NEW_NAME on

echo ""
echo -e "\033[1m$BASENAME mail instance $NEW_NAME has been created in \033[0m\033[1;31m$NEWDIR\033[0m\033[1m"
echo -e "\033[1mSpool directory has been created \033[0m\033[1;31m$SPOOLDIR/$NEW_NAME\033[0m\033[1m"
echo -e "It has also been set to automatically start on boot (\033[0m\033[1;31m$ETC/init.d/$NEW_NAME\033[0m\033[1m)"
echo -e "\033[1mOptions file has been created \033[0m\033[1;31m$ETC/sysconfig/$NEW_NAME\033[0m\033[1m"
echo
echo -e "\033[1mYou may need to edit the configuration files (\033[0m\033[1;31m/etc/$NEW_NAME/main.cf\033[0m\033[1m and/or \033[0m\033[1;31m/etc/$NEW_NAME/master.cf\033[0m\033[1m)"
echo -e "\033[1m \033[0m \033[1;31m NOTE: \033[0m\033[1m if you ran this script directly vs. running the mkmailserver you will need to add the below line to the \033[0m\033[1;31m/etc/$NEW_NAME/master.cf\033[0m\033[1m"

# add the dovecot deliver line to the postfix master.cf file
echo "The below sets the dovecot delivery agent for the postfix instance"
echo ""
echo "dovecot   unix  -       n       n       -       -       pipe" 
echo "    flags=DRhu user=vmail:vmail argv=/usr/libexec/dovecot/deliver -c /etc/<DOVECOT_INSTANCE>/dovecot.conf -d \${recipient}" 

echo -e "\033[0m"
echo

